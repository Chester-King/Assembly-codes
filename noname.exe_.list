EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
noname.exe_ -- emu8086 assembler version: 4.08  
 
[ 20-02-2019  --  21:29:55 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       
[   2]        :                                       ; You may customize this and other start-up templates;
[   3]        :                                       ; The location of this template is c:\emu8086\inc\0_com_template.txt
[   4]        :                                       
[   5]        :                                       .stack 100h
[   6]        :                                       
[   7]        :                                       ; add your code here
[   8]        :                                       
[   9]        :                                       .data  ; initializing the data segments
[  10]        :                                       
[  11]        :                                       
[  12]        :                                       .code ; code segment
[  13]    0100:                                       main proc
[  14]    0100: BA 10 00 8E DA                        .startup ; starts the ALP
[  15]        :                                       
[  16]        :                                       
[  17]        :                                       
[  18]    0105:                                       again:
[  19]    0105: 3C 53                                 cmp al,'S'
[  20]    0107: 73 0C                                 jae end
[  21]        :                                       
[  22]        :                                       
[  23]    0109: B4 01                                 mov ah,01h ; accepts the character from keyboard with echo
[  24]        :                                       
[  25]    010B: CD 21                                 int 21h ; DOS interrupt
[  26]        :                                       
[  27]    010D: 8A D0                                 mov dl,al ; cpmy al content to dl register
[  28]        :                                       
[  29]    010F: B4 02                                 mov ah,02h ; display the character stored in 'dl'
[  30]        :                                       
[  31]    0111: CD 21                                 int 21h ;
[  32]        :                                       
[  33]    0113: EB F0                                 jmp again
[  34]        :                                       
[  35]    0115:                                       end:
[  36]        :                                       
[  37]    0115: B8 00 4C CD 21                        .exit ;
[  38]        :                                       
[  39]        :                                       main endp
[  40]        :                                       
[  41]        :                                       end main
[  42]        :                                       
[  43]        :                                       
[  44]        :                                       
[  45]        :                                       ret
[  46]        :                                       
[  47]        :                                       
[  48]        :                                       
[  49]        :                                       
[  50]        :                                       
[  51]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 1A      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 71      -   check sum (l.byte)
0013: 8B      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 10      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 10      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
