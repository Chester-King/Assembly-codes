EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
noname.exe -- emu8086 assembler version: 4.08  
 
[ 20-02-2019  --  23:16:06 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .stack
[   3]        :                                       .data
[   4]        :                                       
[   5]    0100: FF                                    uMaxLength db 255
[   6]    0101: 00                                    uActualLength db ?
[   7]    0102: 00 00 00 00 00 00 00 00 00 00 00 00   szFileName db 255 dup (?)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00                            
[   8]    0201: 00 00 00 00 00 00 00 00 00 00 00 00   buffer db 100 dup (?), '$'
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 24                      
[   9]        :                                       
[  10]    0266: 45 6E 74 65 72 20 74 68 65 20 66 69   x db 'Enter the filename', '$'
                6C 65 6E 61 6D 65 24                
[  11]        :                                       
[  12]        :                                       .code
[  13]        :                                       
[  14]        :                                       ;main   proc
[  15]        :                                       
[  16]    0280: B8 10 00                              mov ax, seg uMaxLength
[  17]    0283: 8E D8                                 mov ds, ax
[  18]        :                                       
[  19]    0285: B4 09                                 mov ah, 09h
[  20]    0287: BA 66 01                              lea dx, x ;write input message on the screen
[  21]    028A: CD 21                                 int 21h
[  22]        :                                       
[  23]        :                                       
[  24]    028C: B4 0A                                 mov ah, 0ah
[  25]    028E: BA 00 00                              lea dx, uMaxLength ;read file name
[  26]    0291: CD 21                                 int 21h
[  27]        :                                       
[  28]    0293: A0 01 00                              mov al, uActualLength
[  29]    0296: 32 E4                                 xor ah, ah
[  30]    0298: 8B F0                                 mov si, ax
[  31]    029A: C6 44 02 00                           mov szFileName[si], 0 ;make sz see 0A function
[  32]        :                                       
[  33]    029E: B4 3D                                 mov ah, 3dh
[  34]    02A0: 32 C0                                 xor al, al
[  35]    02A2: BA 02 00                              lea dx, szFileName
[  36]    02A5: CD 21                                 int 21h ;open the file
[  37]        :                                       
[  38]    02A7: 8B D8                                 mov bx, ax
[  39]        :                                       
[  40]    02A9:                                       repeat:
[  41]        :                                       
[  42]    02A9: B4 3F                                 mov ah, 3fh
[  43]    02AB: BA 01 01                              lea dx, buffer
[  44]    02AE: B9 64 00                              mov cx, 100
[  45]    02B1: CD 21                                 int 21h
[  46]        :                                       
[  47]    02B3: 8B F0                                 mov si, ax
[  48]    02B5: C6 84 01 01 24                        mov buffer[si], '$'
[  49]        :                                       
[  50]    02BA: B4 09                                 mov ah, 09h
[  51]    02BC: CD 21                                 int 21h ;print on screen
[  52]        :                                       
[  53]        :                                       
[  54]        :                                       
[  55]    02BE: 83 FE 64                              cmp si, 100
[  56]    02C1: 74 E6                                 je repeat
[  57]        :                                       
[  58]    02C3: EB 00                                 jmp stop;jump to end
[  59]        :                                       
[  60]    02C5:                                       stop:
[  61]        :                                       
[  62]    02C5: B8 00 4C                              mov ax, 4c00h
[  63]    02C8: CD 21                                 int 21h
[  64]        :                                       
[  65]        :                                       ;main   endp
[  66]        :                                       ;end main
[  67]        :                                       
[  68]        :                                       
[  69]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: CA      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 03      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 5D      -   check sum (l.byte)
0013: 5C      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 28      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 28      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
